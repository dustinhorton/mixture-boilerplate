//  ----------------------------------------------------------------------
//  =VARS - DEFAULTS
//  ----------------------------------------------------------------------
//  =TYPE
$text:        #000 !default;
$fonts:       helvetica neue, helvetica, arial, sans-serif !default;
$font-size:   15px !default;
$line-height: 1.35 !default;
$placeholder: rgba($text,0.75) !default;


//  =GRID
$cols:             3     !default;
$cols-total:       $cols !default;
$cols-fixed-total: $cols !default;
$cols-css-total:   $cols !default;


//  =SPACING
$gutter:   20px !default;
$gutter-v: 50px !default;
$block-s:  10px !default;
$list-p: 1.35em !default;
$modal-s:  10px !default;


//  =CONTENT
$content: 960px !default;


//  =ANIMATION
$dur:  150ms !default;
$ease: ease-in-out !default;




//  ----------------------------------------------------------------------
//  =VARS
//  ----------------------------------------------------------------------
//  =VIEWPORTS
$full:       $content + $gutter * 2;
$gt-full:    $full + 1;
$lt-full:    $full - 1;
$desktop:    960px;
$lt-desktop: $desktop - 1;
$tablet:     768px;
$lt-tablet:  $tablet - 1;
$mobile:     568px;
$lt-mobile:  $mobile - 1;
$mobile-sm:  320px;
$bps: full $full, lt-full $lt-full, tablet $tablet, lt-tablet $lt-tablet, mobile $mobile, lt-mobile $lt-mobile, mobile-sm $mobile-sm;


//  =COLORS
$fb:        #3b5998;
$twitter:   #00aced;
$pinterest: #cb2027;
$socials: fb $fb, twitter $twitter, pinterest $pinterest;


//  =WEIGHTS
$thin:  100;
$xlt:   200;
$lt:    300;
$med:   500;
$sbold: 600;


//  =ANIMATION
$dur-ease: $dur $ease;




//  ----------------------------------------------------------------------
//  =SPRITES
//  ----------------------------------------------------------------------
//@import 'i/s/*.png';
//@include all-s-sprites(true);




//  ----------------------------------------------------------------------
//  =WEB FONTS
//  ----------------------------------------------------------------------
//@each $font in  {
//    @font-face {
//          font-family: $font; font-weight: normal;
//          src: url('/font/#{$font}.eot');
//          src: url('/font/#{$font}.eot?') format('eot'),
//               url('/font/#{$font}.woff') format('woff'),
//               url('/font/#{$font}.ttf')  format('truetype')
//    }
//}




//  ----------------------------------------------------------------------
//  =MIXINS
//  ----------------------------------------------------------------------
//  =FRAMEWORK
@mixin bg-gradient($start, $end, $orientation: horizontal) {
    background: mix($start,$end);
    @include background(filter-gradient($start,$end,$orientation));
    @if $orientation == 'horizontal' {
        $orientation: 'left';
    } @else {
        $orientation: 'top';
    }
    @include background(linear-gradient($orientation, $start, $end));
}


@mixin block {
    margin: 0 0 $block-s;
}
.block { @include block; }


@mixin btn-block {
    @include block;
}
.btn-block { @include btn-block; }

@mixin btn-full($align: left) {
    width: 100%; display: block; text-align: $align;
}
.btn-full { @include btn-full; }


@mixin center($w, $h) {
    width: $w; height: $h; margin: (-$h/2) 0 0 (-$w/2); position: absolute; top: 50%; left: 50%;
}

@mixin center-v {
    display: table;

    > * { display: table-cell; vertical-align: middle; }
}


@mixin container {
    max-width: $full; margin: auto; padding: 0 $gutter;
}
.container { @include container; }


@mixin copy {
    line-height: $line-height;
    > li { margin: 0 0 $block-s; }
}
.copy { @include copy; }

@mixin copy-block {
    @include block;
    @include copy;
}
.copy-block { @include copy-block; }


@mixin cf {
    &:before,
    &:after { content: ' '; display: table; }
    &:after { clear: both; }
}
.cf { @include cf; }


@mixin click {
    cursor: pointer !important;
}


@mixin font-size($size) {
    font-size: $size;
    font-size: rem($size);
}


@mixin hidden {
    width: 1px; height: 1px; border: 0; clip: rect(0 0 0 0); margin: -1px; overflow: hidden; padding: 0; position: absolute;
}
.hidden { @include hidden; }


@mixin img-block {
    @include block;
}
.img-block { @include img-block; }

@mixin img-full {
    width: 100%; max-width: none;
}
.img-full { @include img-full; }


@mixin list-bulleted {
    list-style: disc; padding-left: $list-p;
}
.list-bulleted { @include list-bulleted; }

@mixin list-numbered {
    list-style: decimal; padding-left: $list-p;
}
.list-numbered { @include list-numbered; }

@mixin list-alpha {
    list-style: lower-alpha; padding-left: $list-p;
}
.list-alpha { @include list-alpha; }


@mixin list-float($m-r: 0, $m-b: 0) {
    @include cf;

    > li {
        float: left;
        @if $m-r != 0 {
            margin-right: $m-r;
        }
        @if $m-b != 0 {
            margin-bottom: $m-b;
        }
    }
}

@mixin list-inline($m: 0) {
    > li { display: inline-block; }
    @if $m != 0 {
        > li + li { margin-left: $m; }
    }
}


@mixin ir {  /**/
    overflow: hidden; text-indent: 100%; white-space: nowrap;
}
.ir { @include ir; }


@mixin media($m: $gutter) {  /**/
    float: left; margin: 0 $m 0 0;
}

@mixin media-content {
    overflow: hidden;
}

@mixin media-simple($m: $gutter) {  /**/
    > .media-media { @include media($m); }

    > .media-media + [class*="-content"] { @include media-content; }  /**/
}

@mixin media-centered($m: $gutter) {  /**/
    width: 100%; display: table;

    > .media-media,
    > .media-content { display: table-cell; vertical-align: middle; }

    > .media-media { padding-right: $m; }
    > .media-media > img { max-width: none; display: block; }

    > .media-content { width: 100%; }
    &.media-top > .media-content { vertical-align: top; }
    &.media-bottom > .media-content { vertical-align: bottom; }

    &.rev {
        > .media-media {
            padding-right: 0;
            padding-left: $gutter;
        }
    }
}
.media-centered { @include media-centered; }


@mixin modal-w($w) {
    width: $w; margin: 0 0 0 (-$w/2);

    @include mq($w + ($modal-s*2)) {
        width: auto; margin: 0; top: $modal-s; right: $modal-s; left: $modal-s;
    }
}


@mixin placeholder($color: $placeholder) {
    &:-moz-placeholder { color: $color; }
    &::-webkit-input-placeholder { color: $color; }
}
.placeholder { color: $placeholder; }


@mixin pull($dir: right) {
    float: $dir;
}
.pull-right { @include pull; }
.pull-left { @include pull(left); }


@mixin reset {
    width: auto; background: none; border: 0; float: none; margin: 0; padding: 0; @include reset-font();
}

@mixin reset-font {
    color: $text; font: $font-size/#{$line-height} $fonts; text-transform: none;
}

@mixin reset-margins {
    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
}


@mixin img-s($img) {
    width: image-width($img);
    height: image-height($img);
}


@mixin table-full {
    width: 100%;
}
.table-full { @include table-full; }


@mixin text-break {
    word-break: break-all;
    word-break: break-word;
    word-wrap: break-word;
}

@mixin text-no-break {
    -ms-word-break: break-all;
        word-break: break-all;
        word-break: break-word;
    -webkit-hyphens: auto;
       -moz-hyphens: auto;
            hyphens: auto;
}

@mixin text-truncate {
    max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; word-wrap: normal;
}


@mixin triangle($dir, $size, $color) {
    position: relative;
    @if ($dir == "top" or $dir == "up" or $dir == "left" or $dir == "before") {
        &:before {
            content: ''; border: $size transparent solid; position: absolute; top: -$size*2;
            @if ($dir == "top" or $dir == "up") {
                border-bottom-color: $color; left: 50%; margin: 0 0 0 (-$size);
            } @else if ($dir == "right" or $dir == "after") {
                border-left-color: $color;
            }
        }
    } @else if ($dir == "bottom" or $dir == "down" or $dir == "left" or $dir == "before") {
        &:after {
            content: ''; border: $size transparent solid; position: absolute; top: -$size;
            @if ($dir == "bottom" or $dir == "down") {
                border-top-color: $color;
            } @else if ($dir == "left" or $dir == "before") {
                border-right-color: $color;
            }
        }
    }
}




//  ----------------------------------------------------------------------
//  =MEDIA QUERIES
//  ----------------------------------------------------------------------
@mixin mq($bp) {
    @if $bp == webkit {
        @media (-webkit-min-device-pixel-ratio: 0) {
            @content;
        }
    }

    @else if $bp == retina {
        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
            @content;
        }
    }

    @else {
        @media (max-width: $bp) {
            @content;
        }
    }
}

@mixin mq-min($bp) {
    @media (min-width: $bp) {
        @content;
    }
}

@mixin mq-h($bp) {
    @media (max-height: $bp) {
        @content;
    }
}

@mixin mq-h-min($bp) {
    @media (min-height: $bp) {
        @content;
    }
}

@mixin mq-class($bp, $class) {
    @include mq($bp) {
        @content;
    }

    .#{$class} & {
        @content;
    }
}




//  ----------------------------------------------------------------------
//  =HELPERS
//  ----------------------------------------------------------------------
.hide { display: none;    }
.show { display: inherit; }

@each $bp in $bps {
    .show-hide-#{nth($bp,1)} {
        @include mq(#{nth($bp,2)}) {
            display: none;
        }
    }

    .hide-show-#{nth($bp,1)} {
        display: none !important;

        @include mq(#{nth($bp,2)}) {
            display: inherit !important;
        }
    }
}




//  ----------------------------------------------------------------------
//  =FUNCTIONS
//  ----------------------------------------------------------------------
@function w ($target, $context) {
    @return ($target / $context) * 100%;
}

@function rem ($num) {
    @return #{$num / $font-size}rem;
}