//  ----------------------------------------------------------------------
//  =COLUMNS
//  ----------------------------------------------------------------------
@mixin is-cols($gutter: $gutter) {
    margin-right: -$gutter/2 !important; margin-left: -$gutter/2 !important; @include cf;
}

.cols { @include is-cols($gutter); }
.cols > [class*="col-"] { float: left; padding-right: $gutter/2; padding-left: $gutter/2; }
.cols-rev > [class*="col-"] { float: right; }


@mixin generate-cols($cols, $bp: '') {
    @for $i from 2 through $cols {
        @if $i == 2 {
            .col-#{$bp}-1 { width: 100%; }
        }

        @for $x from 1 through $i {
            @if $bp == '' {
                .col-#{$x}-#{$i} { width: w($x,$i); }
            } @else {
                .col-#{$bp}-#{$x}-#{$i} { width: w($x,$i); }
            }
        }
    }
}

@each $bp in $bps {
    $bp-label: nth($bp, 1);

    @if $bp-label == "full" {
        @include generate-cols(10);
    } @else {
        @media (max-width: nth($bp, 2)) {
            @include generate-cols(10, $bp-label);
        }
    }
}


@mixin col($gutter: $gutter) {
    > [class*="col-"] { padding-right: $gutter/2; padding-left: $gutter/2; }
}

@mixin cols($gutter: $gutter) {
    .cols {
        @include is-cols($gutter);
        @include col($gutter);
    }
}

@mixin cols-this($gutter: $gutter) {
    @include is-cols($gutter);
    @include col($gutter);
}

@mixin reset-cols {
    .cols { margin-right: 0 !important; margin-left: 0 !important; }
    [class*="col-"] { width: auto !important; float: none !important; padding-right: 0 !important; padding-left: 0 !important; }
}




//  ----------------------------------------------------------------------
//  =COLUMNS - FIXED
//  ----------------------------------------------------------------------
@mixin col-reset {
    width: auto; float: none; margin: 0;
}

@mixin generate-cols-fixed($total-cols) {
    @for $i from 1 through $total-cols {
        @for $c from 1 through $total-cols {
            @if ($c < $total-cols) {
                $frac: $c / $total-cols;
                $right-margin: $full - $full * $frac;
                $width: $full - $right-margin;

                > .col-#{$c}-#{$total-cols} { width: auto; margin-right: $right-margin }

                .col-fixed {
                    &.col-#{$c}-#{$total-cols} {
                        width: $width;
                        margin-right: 0;
                        margin-left: -$width;
                    }
                }
            }
        }

        $total-cols: $total-cols - 1;
    }

    @each $bp in $bps {
        $bp-label: nth($bp, 1);
        .cols-fixed-#{$bp-label} {
            @media (max-width: nth($bp, 2)) {
                > [class*="col-"] { @include col-reset; }
                > .col-fixed { @include col-reset; margin: $gutter-v 0 0; }
            }
        }
    }
}


.cols-fixed {
    .col-fixed {
        float: right;
    }

    @include generate-cols-fixed(4);
}




//  ----------------------------------------------------------------------
//  =COLUMN - SOLO
//  ----------------------------------------------------------------------
[class*="col-"].col-solo { width: auto; }

@mixin generate-cols-solo($cols-total) {
    @for $i from 1 through $cols-total {
        @for $cols from 1 through $cols-total {
            @if ($cols < $cols-total) {
                .col-#{$cols}-#{$cols-total}.col-solo { max-width: $full / $cols-total * $cols; }
            }
        }

        $cols-total: $cols-total - 1;
    }
}

@include generate-cols-solo(4);




//  ----------------------------------------------------------------------
//  =CSS COLUMNS
//  ----------------------------------------------------------------------
@mixin cols-css($cols, $gutter: $gutter) {
    @include column-count($cols);
    @include column-gap($gutter);
}

@for $i from 1 through 4 {
    .cols-#{$i} { @include cols-css($i); }
}




//  ----------------------------------------------------------------------
//  =SECTIONS
//  ----------------------------------------------------------------------
@each $bp in $bps {
    .section-#{nth($bp, 1)} {
        @include mq(#{nth($bp, 2)}) { margin: 0 0 $gutter-v; }
    }
}