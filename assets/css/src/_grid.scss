//  ----------------------------------------------------------------------
//  =COLUMNS
//  ----------------------------------------------------------------------
.cols { box-sizing: border-box; margin-right: -$gutter/2 !important; margin-left: -$gutter/2 !important; @include cf; }
.cols > [class*="col-"] { float: left; padding-right: $gutter/2; padding-left: $gutter/2; }
.cols-rev > [class*="col-"] { float: right; }


@mixin generate-cols($cols, $bp: '') {
    @for $i from 2 through $cols {
        @for $x from 1 through $i {
            @if $bp == '' {
                .col-#{$x}-#{$i} { width: w($x,$i); }
            } @else {
                .col-#{$bp}-#{$x}-#{$i} { width: w($x,$i); }
            }
        }
    }
}

@each $bp in $bps {
    $bp-label: nth($bp, 1);

    @if $bp-label == "full" {
        @include generate-cols(10);
    } @else {
        @media (max-width: nth($bp, 2)) {
            @include generate-cols(10, $bp-label);
        }
    }
}


@mixin cols($gutter: $gutter) {
    .cols { margin-right: -$gutter/2 !important; margin-left: -$gutter/2 !important; }
    .cols > [class*="col-"] { padding-right: $gutter/2; padding-left: $gutter/2; }
}

@mixin cols-this($gutter: $gutter) {
    margin-right: -$gutter/2 !important; margin-left: -$gutter/2 !important;
    > [class*="col-"] { padding-right: $gutter/2; padding-left: $gutter/2; }
}




//  ----------------------------------------------------------------------
//  =COLUMNS - FIXED
//  ----------------------------------------------------------------------
.cols-fixed {
    @include cf;
    > [class*="col-"] { /*width: auto;*/ width: 100%; float: left; }

    $sidebar-1-3: ($full - ($gutter * 3)) / 3;

    > .col-2-3 { padding-right: $sidebar-1-3 + $gutter; }

    .col-fixed {
        float: right; padding-left: $gutter;
        &.col-1-3 { width: $sidebar-1-3; margin-left: -$sidebar-1-3; }
    }

    @mixin col-reset {
        width: auto; float: none; margin: 0; padding: 0;
    }
    @mixin col-fixed-reset {
        /*max-width: 50%;*/ width: auto; float: none; padding: 0;
    }

    &.cols-fixed-desktop {
        @include mq($desktop) {
            > [class*="col-"] { @include col-reset; }
            > .col-fixed {
                @include col-fixed-reset; margin: 75px 0 0;
                &.col-1-3 {
                    width: $full/3;
                    @include mq($mobile) { width: 100%; }
                }
            }
        }
    }

    &.cols-fixed-tablet {
        @include mq($tablet) {
            > [class*="col-"] { @include col-reset; }
            > .col-fixed {
                @include col-fixed-reset; margin: 75px 0 0;
                &.col-1-3 {
                    width: $full/3;
                    @include mq($mobile) { width: 100%; }
                }
            }
        }
    }

    &.cols-fixed-lt-tablet {
        @include mq($lt-tablet) {
            > [class*="col-"] { @include col-reset; }
            > .col-fixed {
                @include col-fixed-reset; margin: 75px 0 0;
                &.col-1-3 {
                    width: $full/3;
                    @include mq($mobile) { width: 100%; }
                }
            }
        }
    }

    &.cols-fixed-mobile {
        @include mq($mobile) {
            > [class*="col-"] { @include col-reset; }
            > .col-fixed {
                @include col-fixed-reset; margin: 50px 0 0;
                &.col-1-3 { width: 100%; }
            }
        }
    }

    &.cols-fixed-mobile-sm {
        @include mq($mobile-sm) {
            > [class*="col-"] { @include col-reset; }
            > .col-fixed { @include col-fixed-reset; margin: 50px 0 0; }
        }
    }
}


//  ----------------------------------------------------------------------
//  =COLUMN - SOLO
//  ----------------------------------------------------------------------
[class*="col-"].col-solo { width: auto; }
.col-3-4.col-solo { max-width: $full/4*3; }
.col-2-3.col-solo { max-width: $full/3*2; }
.col-1-2.col-solo { max-width: $full/2;   }
.col-1-3.col-solo { max-width: $full/3;   }




//  ----------------------------------------------------------------------
//  =CSS COLUMNS
//  ----------------------------------------------------------------------
@for $i from 1 through 3 {
    .cols-#{$i} {
        @include column-count($i);
        @include column-gap($gutter);

        @include mq($lt-mobile) { @include column-count(1); }
    }

    ul,
    ol {
        &.cols-#{$i} { list-style-position: inside; padding-left: 0; }
    }
}




//  ----------------------------------------------------------------------
//  =SECTIONS
//  ----------------------------------------------------------------------
@mixin section {
    margin: 0 0 $gutter-v; @include cf;
}

@each $bp in $bps {
    $bp: nth($bp, 1);

    .section-#{$bp} {
        @include mq(#{$bp}) { @include section; }
    }
}